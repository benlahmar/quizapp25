{
    "pipes": [
        {
            "name": "QuizPipe",
            "id": "pipe-QuizPipe-29118aa17bedae45f1762bc9fc0f3c69a4d20b3a97600dd230d965d7dd5b2fffeee5c08ff1175b4e7175f226bc0032350c1d2dabd38e6659e195e073bba99e68",
            "file": "src/app/share/quiz.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "q",
                            "type": "Quiz",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Question[]",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "q",
                            "type": "Quiz",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "quiz",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Quiz } from '../core/quiz';\r\nimport { Question } from '../core/question';\r\n\r\n@Pipe({\r\n  name: 'quiz',\r\n  standalone: true\r\n})\r\nexport class QuizPipe implements PipeTransform {\r\n\r\n  transform(q: Quiz, ...args: string[]): Question[] {\r\n    let x:Question[]=[];\r\n    if(args[0]=='select')\r\n    x=q.questions.filter(c=>c.isresponse);\r\n    if(args[0]=='correct')\r\n      x=q.questions.filter(c=>c.iscorrect);\r\n    return x;\r\n  }\r\n\r\n}\r\n"
        },
        {
            "name": "ScorePipe",
            "id": "pipe-ScorePipe-2a46871a53762a766a94ab806b771be94ef1c1ee33061380240befeae288bbc1720a655bfa0802c40afbe6300331f0ff691687151b21d89751dece667be76bb0",
            "file": "src/app/share/score.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Quiz",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Quiz",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "score",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Quiz } from '../core/quiz';\r\n\r\n@Pipe({\r\n  name: 'score',\r\n  standalone: true\r\n})\r\nexport class ScorePipe implements PipeTransform {\r\n\r\n  transform(value: Quiz, ...args: unknown[]): number {\r\n    let qs=value.questions.filter(q=>q.iscorrect).length;\r\n    let score= (qs/value.questions.length)*100\r\n    return score;\r\n  }\r\n\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "ConfigState",
            "id": "interface-ConfigState-72d0cfdaf533ae7de89a0bb6490807de53c0725d4a33ff253e5504410a814663af4276263284803b6ebd31f62ccb5a532f90892719e56710bcd5fcb47c25ce49",
            "file": "src/app/core/state/configstate.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { QuizConfig } from \"../quiz-config\";\r\n\r\nexport interface ConfigState {\r\n  config: QuizConfig; \r\n}\r\n\r\nexport const initialConfigState: ConfigState = {\r\n  config: new QuizConfig({\r\n    allowBack: true,\r\n    allowReview: true,\r\n    autoMove: false,    \r\n    duration: 10,  \r\n    pageSize: 1,\r\n    requiredAll: false,\r\n    richText: false,\r\n    shuffleQuestions: false,\r\n    shuffleOptions: false,\r\n    showClock: true,\r\n    showPager: true\r\n    \r\n    }) // Initialiser avec une instance de QuizConfig \r\n}",
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuizConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "CounterState",
            "id": "interface-CounterState-80125b8bbd305312ad01fe4b261b6353d599dfb4e8d9241988b4644de5aeaf2f0ea5405d8bb0ae7c2d4691fb5bc08083db8612561e1d346684d489154330f6df",
            "file": "src/app/core/state/counter.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Quiz } from \"../quiz\";\r\nimport { QuizConfig } from \"../quiz-config\";\r\n\r\nexport interface CounterState {\r\n  counter: number;\r\n // quiz?:Quiz;\r\n configdata:QuizConfig;\r\n  \r\n}\r\n\r\n// Ã‰tat initial\r\nexport const initialCounterState: CounterState = {\r\n  counter: 0\r\n  ,configdata:new QuizConfig({}) // Initialiser avec une instance de QuizConfig\r\n};",
            "properties": [
                {
                    "name": "configdata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuizConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "counter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-dbfa625a8cf78f8f886413a48f91ca86a661affe38e11936ea16308a0267fc99a7597a00cfbdc6f612cd53d2c767946850f9f0a3ebe8749a9aa1d31161c6f3c7",
            "file": "src/app/cores/services/auth.service.ts",
            "properties": [
                {
                    "name": "isLogged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "chcklogin",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  isLogged=false;\r\n\r\n  constructor() { }\r\n  login(){\r\n    this.isLogged=true;\r\n  }\r\n  chcklogin(){\r\n    return this.isLogged;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "MyserviceService",
            "id": "injectable-MyserviceService-e366edb1733dde92433d9f08d6b0cb5bf55b2034d6f81dd8f41d38009b92923b559a76878a5b6413d0284b434e10c181638611bdb2db6a4bbce07a7f016feac9",
            "file": "src/app/core/services/myservice.service.ts",
            "properties": [
                {
                    "name": "data",
                    "defaultValue": "q",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "message",
                    "defaultValue": "new BehaviorSubject<string>(\"Bonjour le monde\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "message$",
                    "defaultValue": "this.message.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getcurrentMessage",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sayhollo",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatedata",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateMessage",
                    "args": [
                        {
                            "name": "newMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newMessage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { q } from '../../share/dataquiz';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyserviceService {\r\n\r\n  private message:BehaviorSubject<string> = new BehaviorSubject<string>(\"Bonjour le monde\");\r\n  public message$ = this.message.asObservable();\r\n  data=q;\r\n \r\n  constructor() { }\r\n\r\n  updateMessage(newMessage: string) {\r\n    this.message.next(newMessage);\r\n    console.log(\"message updated to: \", newMessage);\r\n  }\r\n\r\n  getcurrentMessage() {\r\n    return this.message.getValue();\r\n  }\r\n  \r\n   sayhollo()\r\n  {\r\n    return 'hello';\r\n  }\r\n  updatedata()\r\n  {\r\n    return '';\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ShareService",
            "id": "injectable-ShareService-684a6bf3c44bb68b66e3c98146efb2fb2295cad618ff173cbf02fac2dec0afe3e857e9b86f4db4f3702c4fa66a0ffb45163404d5bdafbf2dd01916581ae933d5",
            "file": "src/app/core/services/share.service.ts",
            "properties": [
                {
                    "name": "message$",
                    "defaultValue": "this.subjetmessage.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "subjetmessage",
                    "defaultValue": "new BehaviorSubject<string>(\"bonjour ....\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "getcurentmessage",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatemessage",
                    "args": [
                        {
                            "name": "msg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "msg",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject  } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareService {\r\n\r\n  subjetmessage:BehaviorSubject<string> = new BehaviorSubject<string>(\"bonjour ....\");\r\n  \r\n  message$=this.subjetmessage.asObservable();\r\n\r\n  constructor() {  \r\n   }\r\n\r\n  getcurentmessage(){\r\n    return this.subjetmessage.getValue();\r\n  }\r\n  updatemessage(msg:string){\r\n    this.subjetmessage.next(msg);\r\n    console.log(\"message updated\");\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-69c233e01c5e6b15501685a50846b2c936a4d786ce8aface6d351a557d8147e0be4b09103e0a19cc0aad796e494d18ec12d807ac44bdba698c15cc8244a304cf",
            "file": "src/app/core/services/user.service.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "'https://jsonplaceholder.typicode.com/users'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "addUser",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getuser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getusers",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "updateUser",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  baseUrl='https://jsonplaceholder.typicode.com/users';\r\n\r\n   constructor(private http:HttpClient) { }\r\n\r\n  public getusers()\r\n  {\r\n    return   this.http.get<User[]>(this.baseUrl,{observe:'body'});\r\n  }\r\n\r\n  public getuser(id: number) {\r\n    return this.http.get(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n  public addUser(user: any) {\r\n    return this.http.post(this.baseUrl, user);\r\n  }\r\n\r\n  public updateUser(id: number, user: any) {\r\n    return this.http.put(`${this.baseUrl}/${id}`, user);\r\n  }\r\n\r\n  public deleteUser(id: number) {\r\n    return this.http.delete(`${this.baseUrl}/${id}`);\r\n  }\r\n\r\n \r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-691c3e1bc268a861944eb2b5076f9124f21767f8225e451c18bba4cc2175740137086d675af14795735f470cb3dab2eda1f92bc075dfaa374ae9a85b258a7f8f",
            "file": "src/app/core/guards/authguard.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MaybeAsync<GuardResult>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ActivatedRouteSnapshot, CanActivate, GuardResult, MaybeAsync, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from '../../cores/services/auth.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  \r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): MaybeAsync<GuardResult> {\r\n\r\n    if( this.authService.isLogged) {\r\n      console.log(\"user is logged\");\r\n       console.log(this.authService.isLogged);\r\n      return true;\r\n    }else{\r\n      console.log(\"user is not logged\");\r\n      console.log(this.authService.isLogged);\r\n     \r\n      //alert(\"you are not logged in\");\r\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n      return false;\r\n    \r\n  }\r\n\r\n  \r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "Option",
            "id": "class-Option-e64c08aafd08d2ae9ba3ae17737b424e37bc28318f04cefe0af1ce758d03d01df55613264866fb06ea2da81ea41f5e136d0f267603a54b96c2be439de29e7e8c",
            "file": "src/app/core/option.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Option\r\n{\r\n    id:number;\r\n    name:string;\r\n    isAnswer:boolean;\r\n\r\n    isSelected:boolean;\r\n\r\n    constructor(data:any)\r\n    {\r\n        this.id=data.id;\r\n        this.name=data.name;\r\n        this.isAnswer=data.isAnswer;\r\n        this.isSelected= false;\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isAnswer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isSelected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Question",
            "id": "class-Question-3dee416867a3d4a824436a1d71ce93cef02a6e904f0d124e523937317f1b7eba51d7d20757fef8c89db63faebe9e05f2528ce4a92e1a908131c4ce3b12fe557c",
            "file": "src/app/core/question.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Option } from \"./option\";\r\n\r\nexport class Question\r\n{\r\n    id:number;\r\n    name:string;\r\n\r\n    options:Option[];\r\n    isresponse:boolean;\r\n    iscorrect:boolean;\r\n    constructor(data:any)\r\n    {\r\n        this.id=data.id;\r\n        this.name=data.name;\r\n        this.options=[];\r\n           if(data.options!==undefined && data.options!==null){\r\n        data.options.forEach((o:Option) => {\r\n            this.options.push(new Option(o));\r\n        });\r\n    }\r\n        this.isresponse=false;\r\n        this.iscorrect=false;\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "iscorrect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isresponse",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Option[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Quiz",
            "id": "class-Quiz-8cad7379742b51d31d80efde6980517cc1caf970855058b42f8f3145734ce90248348c8a7453a0f8e5daa3cfcb346f77dc35d51cea9aaa3dd427c6b8d09612cb",
            "file": "src/app/core/quiz.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Question } from \"./question\";\r\nimport { QuizConfig } from \"./quiz-config\";\r\n\r\nexport class Quiz\r\n{\r\n    id:number;\r\n    name:string;\r\n    description:string;\r\n    questions:Question[];\r\n    config:QuizConfig;\r\n    constructor(data:any)\r\n    {\r\n        this.id=data.id;\r\n        this.name=data.name;\r\n        this.description=data.description;\r\n        this.questions=[];\r\n        if(data.questions!==undefined && data.questions!==null){\r\n        data.questions.forEach((q:Question) => {\r\n\r\n            this.questions.push(new Question(q));\r\n        });\r\n        this.config=new QuizConfig(data.config);\r\n    }\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuizConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "QuizConfig",
            "id": "class-QuizConfig-4e21b3a8c7fecfd5db41c8b4cd956fd6fb94308039c827ea784c57b9df0823a471363c631f899ae7a2842b42a503dbc06010588a1df7378377ded3a980ba69cd",
            "file": "src/app/core/quiz-config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class QuizConfig {\r\n    allowBack: boolean;\r\n    allowReview: boolean;\r\n    autoMove: boolean;  //  \r\n    duration: number;  // \r\n    pageSize: number;\r\n    requiredAll: boolean;  // \r\n    richText: boolean;\r\n    shuffleQuestions: boolean;\r\n    shuffleOptions: boolean;\r\n    showClock: boolean;\r\n    showPager: boolean;\r\n    theme: string;\r\n\r\n    constructor(data: any) {\r\n        data = data || {};\r\n        this.allowBack = data.allowBack;\r\n        this.allowReview = data.allowReview;\r\n        this.autoMove = data.autoMove;\r\n        this.duration = data.duration;\r\n        this.pageSize = data.pageSize;\r\n        this.requiredAll = data.requiredAll;\r\n        this.richText = data.richText;\r\n        this.shuffleQuestions = data.shuffleQuestions;\r\n        this.shuffleOptions = data.shuffleOptions;\r\n        this.showClock = data.showClock;\r\n        this.showPager = data.showPager;\r\n    }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "allowBack",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "allowReview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "autoMove",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "requiredAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "richText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "showClock",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "showPager",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "shuffleOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "shuffleQuestions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-a1f0c4451af51c32976541e85a6b05f534642c01c72fdbe71fb904084613f3b632c24892d06161d8d74955e424f023a576a5234c8e71d0e3327d9b520740d1a1",
            "file": "src/app/core/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class User{\r\n    id:number\r\n;\r\n    name:string;\r\n    username:string;\r\n    email:string;\r\n    \r\n}",
            "inputsClass": [],
            "outputsClass": [],
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BackcolorDirective",
            "id": "directive-BackcolorDirective-ae5c58819ba10d836eea618687e73d1d39d0c72bb2982fc5dcaee6f61a96db36a8f47ad624225df6030087f44b541c8fd61aa5b1e47944ffce3e250776989806",
            "file": "src/app/share/backcolor.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appBackcolor]',\r\n  standalone: true\r\n})\r\nexport class BackcolorDirective {\r\n\r\n  @Input('appBackcolor')\r\n  color:string;\r\n  defaultcolor='white';\r\n  constructor(private ele:ElementRef, private render:Renderer2) { \r\n\r\n\r\n    render.addClass(ele.nativeElement,'abc');\r\n    render.setStyle(ele.nativeElement,'background-color',this.defaultcolor);\r\n    render.setStyle(ele.nativeElement,'padding','10px ');\r\n     render.setStyle(ele.nativeElement,'margin','10px ');\r\n    render.setStyle(ele.nativeElement,'opacity','0.7');\r\n  }\r\n  \r\n  @HostListener('mouseenter') onMouseEnter() {\r\n     this.render.setStyle(this.ele.nativeElement,'background-color',this.color);\r\n  }\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.render.setStyle(this.ele.nativeElement,'background-color',this.defaultcolor);\r\n  }\r\n}\r\n",
            "selector": "[appBackcolor]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "appBackcolor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "mouseenter",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22
                },
                {
                    "name": "mouseleave",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25
                }
            ],
            "propertiesClass": [
                {
                    "name": "defaultcolor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "onMouseEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseenter'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "onMouseLeave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'mouseleave'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "ele",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "ele",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "TableDirective",
            "id": "directive-TableDirective-aa197149e8b64b04adfd238e36226c5755c039f2a078fe8d8422d4204ce7d5e9622e1a1486ee75db3a53537841bfedac9fc118fafb1334ac79b015ff4fc77b29",
            "file": "src/app/share/table.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appTable]',\r\n  standalone: true\r\n})\r\nexport class TableDirective {\r\n\r\n  constructor(private el:ElementRef, private render:Renderer2) {\r\n\r\n    let tab=this.render.createElement('table');\r\n    tab.setAttribute('border','1');\r\n    tab.setAttribute('bgcolor','red');\r\n    tab.setAttribute('width','100%');\r\n    for(let i=0;i<3;i++)\r\n    {\r\n      let tr=render.createElement('tr');\r\n      for(let j=0;j<3;j++)\r\n      {\r\n        let td=render.createElement('td');\r\n        let text=this.render.createText('row '+i+' col '+j);\r\n        this.render.appendChild(td,text);\r\n        this.render.appendChild(tr,td);\r\n      }\r\n      this.render.appendChild(tab,tr);\r\n    }\r\n\r\n    render.appendChild(el.nativeElement,tab);\r\n   }\r\n\r\n}\r\n",
            "selector": "[appTable]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "render",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-6c31fec7f1ee671d4ff192e8d2c8679deb38da93ff9c2765d722146ae04e4452f940d1ebd6d2ae0f856db14e9c86c1ad793c1676d526526b84be80d3eb94d702",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "Quiz1Component",
                    "type": "component"
                },
                {
                    "name": "QuizComponent",
                    "type": "component"
                },
                {
                    "name": "ThemeListComponent",
                    "type": "component"
                },
                {
                    "name": "TopMenuComponent",
                    "type": "component"
                },
                {
                    "name": "MsgComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { q } from './share/dataquiz';\r\nimport { Quiz1Component } from \"./components/quiz1/quiz1.component\";\r\nimport { QuizComponent } from \"./features/quiz/quiz.component\";\r\nimport { ThemeListComponent } from \"./features/theme-list/theme-list.component\";\r\nimport { TopMenuComponent } from \"./share/top-menu/top-menu.component\";\r\nimport { MsgComponent } from \"./components/teststate/msg/msg.component\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, Quiz1Component, QuizComponent, ThemeListComponent, TopMenuComponent, MsgComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n \r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n<app-top-menu></app-top-menu>\r\n\r\n <app-msg></app-msg>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "CompanyformComponent",
            "id": "component-CompanyformComponent-36936a7aee99cb77f2fb0d8ee6cb63384afc17fe4f6d8ebe62fd0f522fcc3350ea1c5b5a36ad75ccce91c74dc8eee95fa8174722d776b301976e46746cee8a5b",
            "file": "src/app/features/companyform/companyform.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-companyform",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./companyform.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "notif",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "etat",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "verif",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-companyform',\r\n  standalone: true,\r\n  imports: [FormsModule],\r\n  templateUrl: './companyform.component.html',\r\n  styleUrl: './companyform.component.css'\r\n})\r\nexport class CompanyformComponent {\r\n\r\n  company: any;\r\n  @Output()\r\nnotif:EventEmitter<any> = new EventEmitter();\r\netat:boolean = false;\r\n\r\nverif(){\r\n  if(this.company.name == \"\" || this.company.catchPhrase == \"\" || this.company.bs == \"\"){\r\n    this.etat = false;\r\n  }\r\n  if(this.company.name != \"\" && this.company.catchPhrase != \"\" && this.company.bs != \"\"){\r\n  \r\n    this.etat = true;\r\n  }\r\n  this.notif.emit(this.etat);\r\n}\r\n\r\n  constructor() {\r\n    this.company = {\r\n      name: \"\",\r\n      catchPhrase: \"\",\r\n      bs: \"\"\r\n      \r\n    };\r\n  }\r\n}\r\n",
            "styleUrl": "./companyform.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 27
            },
            "extends": [],
            "templateData": "<fieldset>\r\n   <legend>Company</legend>\r\n\r\n  <div class=\"mb-3\">\r\n    <label for=\"company\" class=\"form-label\">Company name</label>\r\n    <input (focus)=\"verif()\" #companyname=\"ngModel\" name=\"companyname\"  [(ngModel)]=\"company.name\" type=\"text\" class=\"form-control\" required id=\"company\" aria-describedby=\"emailHelp\">\r\n    <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n  </div>\r\n  <div class=\"mb-3\">\r\n    <label for=\"catchPhrase\" class=\"form-label\">catchPhrase</label>\r\n    <input (focus)=\"verif()\"  #catchPhrase=\"ngModel\" name=\"catchPhrase\"  [(ngModel)]=\"company.catchPhrase\" type=\"text\" required class=\"form-control\" id=\"catchPhrase\">\r\n  </div>\r\n  <div class=\"mb-3\">\r\n    <label for=\"bs\" class=\"form-label\">BS</label>\r\n    <input (focus)=\"verif()\" #bs=\"ngModel\" name=\"bs\"  [(ngModel)]=\"company.bs\" type=\"text\" class=\"form-control\" required id=\"bs\">\r\n  </div>\r\n  \r\n</fieldset>\r\n"
        },
        {
            "name": "ConfigComponent",
            "id": "component-ConfigComponent-72937c67b3591181cb443bb9f35fd044ca0f910544029f21983591dc146b1bb2354a12dd902f24f3c81e4e685736da5f6dc1b5967ceb6b4bd72283676bc1cc8b",
            "file": "src/app/features/config/config.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-config",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./config.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "QuizConfig",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "TableDirective",
                    "type": "directive"
                },
                {
                    "name": "ConfigstoreComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { QuizConfig } from '../../core/quiz-config';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TableDirective } from '../../share/table.directive';\r\nimport { ConfigstoreComponent } from \"../configstore/configstore.component\";\r\n\r\n@Component({\r\n  selector: 'app-config',\r\n  standalone: true,\r\n  imports: [FormsModule, TableDirective, ConfigstoreComponent],\r\n  templateUrl: './config.component.html',\r\n  styleUrl: './config.component.css'\r\n})\r\nexport class ConfigComponent {\r\n\r\n  @Input()\r\n  data:QuizConfig;\r\n}\r\n",
            "styleUrl": "./config.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n<div class=\"accordion\" id=\"accordionExample\">\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingOne\">\r\n      <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Configuration\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n    \r\n    <div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"  [(ngModel)]=\"data.allowReview\" id=\"allowReview\" checked>\r\n  <label class=\"form-check-label\" for=\"allowReview\">Allow Review</label>\r\n</div>\r\n <div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"  [(ngModel)]=\"data.allowBack\" id=\"allowBack\" checked>\r\n  <label class=\"form-check-label\" for=\"allowBack\">Allow Back</label>\r\n</div>\r\n    \r\n    <label for=\"duration\" class=\"form-label\">DurÃ©e : {{data.duration}}</label>\r\n<input type=\"range\" [(ngModel)]=\"data.duration\" class=\"form-range\" min=\"10\" max=\"50\" id=\"duration\">\r\n\r\n<div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"  [(ngModel)]=\"data.showClock\" id=\"showClock\" checked>\r\n  <label class=\"form-check-label\" for=\"showClock\">show Clock</label>\r\n</div>\r\n\r\n<div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"  [(ngModel)]=\"data.showPager\" id=\"showPager\" checked>\r\n  <label class=\"form-check-label\" for=\"showPager\">show Pager</label>\r\n</div>\r\n<div >\r\n\r\n</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  \r\n<hr/>\r\n"
        },
        {
            "name": "ConfigstoreComponent",
            "id": "component-ConfigstoreComponent-2ddf7d16e1e0f50855dd141cc1331b4ef7e0caeea150549df7bd599d66efca4ca927702125f69f67c3ad9bb9d3474d546fdd84d77ec701122de7e798adfba176",
            "file": "src/app/features/configstore/configstore.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-configstore",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./configstore.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "conf$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<QuizConfig>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "dataconfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuizConfig",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "alloreview",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "alloreview2",
                    "args": [
                        {
                            "name": "ee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ee",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { QuizConfig } from '../../core/quiz-config';\r\nimport { Observable } from 'rxjs';\r\nimport { allowreview } from '../../core/state/config.actions';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AsyncPipe, JsonPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-configstore',\r\n  standalone: true,\r\n  imports: [FormsModule,AsyncPipe,JsonPipe],\r\n  templateUrl: './configstore.component.html',\r\n  styleUrl: './configstore.component.css'\r\n})\r\nexport class ConfigstoreComponent {\r\n\r\n  dataconfig:QuizConfig;\r\n  conf$:Observable<QuizConfig>;\r\n\r\n  constructor(private store:Store<{'config':QuizConfig}>) {\r\n    this.conf$ = this.store.select('config');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getConfig();\r\n  }\r\n\r\n  getConfig() {\r\n    this.store.select('config').subscribe((data) => {\r\n     console.log(\"config store data\");\r\n      console.log(data);\r\n      this.dataconfig = data;\r\n    });\r\n  }\r\n\r\n  alloreview() {\r\n    this.store.dispatch(allowreview({ value: true }));\r\n  }\r\n\r\n  alloreview2(ee:any) {\r\n   // \r\n   console.log(ee.target.checked);\r\n   this.store.dispatch(allowreview({ value: ee.target.checked }));\r\n  }\r\n\r\n\r\n\r\n  updateConfig() {\r\n    this.store.dispatch({ type: 'UPDATE_CONFIG', payload: { name: 'Updated Name' } });\r\n  }\r\n  resetConfig() {\r\n    this.store.dispatch({ type: 'RESET_CONFIG' });\r\n  }\r\n  addConfig() {\r\n    this.store.dispatch({ type: 'ADD_CONFIG', payload: { name: 'New Config' } });\r\n  }\r\n  deleteConfig() {\r\n    this.store.dispatch({ type: 'DELETE_CONFIG', payload: { name: 'Config to Delete' } });\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./configstore.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "\r\n<div class=\"accordion\" id=\"accordionExample\">\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingOne\">\r\n      <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Configuration\r\n        <p>{{conf$ | async | json}}</p>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n    \r\n    <div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"  (change)=\"alloreview2($event)\"  id=\"allowReview\" checked>\r\n  <label class=\"form-check-label\" for=\"allowReview\">Allow Review</label>\r\n</div>\r\n <div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"  id=\"allowBack\" checked>\r\n  <label class=\"form-check-label\" for=\"allowBack\">Allow Back</label>\r\n</div>\r\n    \r\n    <label for=\"duration\" class=\"form-label\">DurÃ©e : </label>\r\n<input type=\"range\" class=\"form-range\" min=\"10\" max=\"50\" id=\"duration\">\r\n\r\n<div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"  id=\"showClock\" checked>\r\n  <label class=\"form-check-label\" for=\"showClock\">show Clock</label>\r\n</div>\r\n\r\n<div class=\"form-check form-switch\">\r\n  <input class=\"form-check-input\" type=\"checkbox\"   id=\"showPager\" checked>\r\n  <label class=\"form-check-label\" for=\"showPager\">show Pager</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  \r\n"
        },
        {
            "name": "CounterComponent",
            "id": "component-CounterComponent-b9f90a1b4f55656ab77fdab3bc2442a813e77aee621979c3188c313cf8423137291e103e96abdfee3331402cf87040bf0978401ff632ee301aa6337b15405f54",
            "file": "src/app/components/counter/counter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-counter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./counter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "count$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "decrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "increment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetTo",
                    "args": [
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                },
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nimport { AsyncPipe, NgIf } from '@angular/common'; // Importer l'AsyncPipe et NgIf pour le template\r\n\r\nimport { Store } from '@ngrx/store'; // Importer le Store de NgRx\r\nimport { Observable } from 'rxjs'; // Importer Observable pour gÃ©rer les flux de donnÃ©es  \r\nimport { selectCounter } from '../../core/state/counter.selectors';\r\nimport { decrement, increment, reset } from '../../core/state/counter.actions';\r\n@Component({\r\n  selector: 'app-counter',\r\n  standalone: true,\r\n  imports: [AsyncPipe, NgIf], // Importer AsyncPipe et NgIf pour le template\r\n  templateUrl: './counter.component.html',\r\n  styleUrl: './counter.component.css'\r\n})\r\nexport class CounterComponent {\r\n // SÃ©lectionner la valeur du compteur depuis le store.\r\n  // 'select' retourne un Observable qui Ã©mettra chaque fois que l'Ã©tat de cette partie change.\r\n  // Le type <{ counter: number }> correspond Ã  la structure de l'Ã©tat global gÃ©rÃ©e par provideStore.\r\n  // Si votre reducer gÃ©rait directement le nombre, ce serait <number>.\r\n  count$: Observable<number>;\r\n\r\n  constructor(private store: Store<{ counter: number }>) {\r\n     // Utiliser le sÃ©lecteur pour obtenir l'Observable de la valeur du compteur\r\n    this.count$ = this.store.select(selectCounter);\r\n\r\n    // Optionnel: Vous pouvez aussi sÃ©lectionner directement sans sÃ©lecteur si vous connaissez la structure,\r\n    // mais les sÃ©lecteurs sont prÃ©fÃ©rables pour l'abstraction et la composition.\r\n    // this.count$ = this.store.select(state => state.counter.counter);\r\n  }\r\n\r\n  // MÃ©thodes pour Ã©mettre des actions\r\n  increment() {\r\n    // On appelle dispatch() sur le store en lui passant l'action crÃ©Ã©e\r\n    this.store.dispatch(increment());\r\n  }\r\n\r\n  decrement() {\r\n    this.store.dispatch(decrement());\r\n  }\r\n\r\n  reset() {\r\n    // Pour l'action reset, on passe le payload (la valeur)\r\n    this.store.dispatch(reset({ value: 0 }));\r\n  }\r\n\r\n  resetTo(newValue: number) {\r\n     this.store.dispatch(reset({ value: newValue }));\r\n  }\r\n}\r\n",
            "styleUrl": "./counter.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<literal type>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div>\r\n      <h2>Counter</h2>\r\n      <!-- Afficher la valeur du compteur en utilisant l'async pipe pour souscrire Ã  l'Observable -->\r\n      <p>Current Value: {{ count$ | async }}</p>\r\n\r\n      <!-- Boutons pour dÃ©clencher les actions -->\r\n      <button (click)=\"increment()\">Increment</button>\r\n      <button (click)=\"decrement()\">Decrement</button>\r\n      <button (click)=\"reset()\">Reset to 0</button>\r\n\r\n      <!-- Exemple pour rÃ©initialiser Ã  une autre valeur -->\r\n      <button (click)=\"resetTo(100)\">Reset to 100</button>\r\n    </div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-ca38f227c75af3e95136e270f6c832f470b4e40b7f1d035c5f7d90029ec3697ec13703ca02e343dcc8e4e0395a0f2bcb8a728baa81e04063853c666578f4d148",
            "file": "src/app/core/components/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "Mylib2Component",
                    "type": "component"
                },
                {
                    "name": "Mylib2Component",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../cores/services/auth.service';\r\nimport { Mylib2Component } from 'mylib2';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [Mylib2Component,Mylib2Component],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.css'\r\n})\r\nexport class LoginComponent {\r\n\r\n  constructor(private router: Router, private authService: AuthService) {\r\n    // Initialize any properties or services needed for the component\r\n  }\r\n\r\n  // Add any methods or properties needed for the login functionality\r\n  login() {\r\n    // Implement login logic here\r\n    console.log('Login button clicked');\r\n    this.authService.login();\r\n    console.log(this.authService.isLogged);\r\n  } \r\n}\r\n",
            "styleUrl": "./login.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<button class=\"btn btn-primary\" (click)=\"login()\">Login</button>\r\n<gt-mylib2></gt-mylib2>\r\n"
        },
        {
            "name": "MsgComponent",
            "id": "component-MsgComponent-548c0c9bd94d8ee6b77f6b52065ed87b7640b6f8cf82749d1f921b594c2c45fa1e129472471e1b25c4b0506bb4c4fe47f9709a3777c889d3c618e7e3d5258c2d",
            "file": "src/app/components/teststate/msg/msg.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-msg",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./msg.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShareService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changemessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ShareService } from '../../../core/services/share.service';\r\nimport { AsyncPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-msg',\r\n  standalone: true,\r\n  imports: [AsyncPipe],\r\n  templateUrl: './msg.component.html',\r\n  styleUrl: './msg.component.css'\r\n})\r\nexport class MsgComponent implements OnInit {\r\n\r\n \r\n  constructor(public service:ShareService) {}\r\n  ngOnInit(): void {\r\n    console.log(\"init compoent msg\");\r\n  }\r\n\r\n  changemessage() {\r\n    this.service.updatemessage(\"message updated from msg component\");\r\n    console.log(\"message from msg component\");\r\n  }\r\n}\r\n",
            "styleUrl": "./msg.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ShareService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ShareService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n    <p>{{service.message$ | async}}</p>\r\n    <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary\"\r\n        (click)=\"changemessage()\">change</button>\r\n</div>\r\n"
        },
        {
            "name": "OptionComponent",
            "id": "component-OptionComponent-d802ec30d3b9b866c6984121edb8bd23724b9d0ac7e57ff8bfe5de981b8bf44e5634cc589955a6675aeb8df340c45e8e5456541211b6a122ab13bcf96087ba79",
            "file": "src/app/features/option/option.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-option",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./option.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "opt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Option",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "notif",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ff",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "BackcolorDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Option } from '../../core/option';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BackcolorDirective } from '../../share/backcolor.directive';\r\n\r\n@Component({\r\n  selector: 'app-option',\r\n  standalone: true,\r\n  imports: [FormsModule,BackcolorDirective],\r\n  templateUrl: './option.component.html',\r\n  styleUrl: './option.component.css'\r\n})\r\nexport class OptionComponent {\r\n\r\n  @Input()\r\n  opt:Option  ;\r\n\r\n   @Input()\r\n   mode:string\r\n\r\n   @Output()\r\n   notif:EventEmitter<any>=new EventEmitter();\r\n  ff()\r\n  {\r\n    console.log(this.opt);\r\n    this.notif.emit(this.opt.isSelected);\r\n  }\r\n}\r\n",
            "styleUrl": "./option.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": " <div appBackcolor>\r\n    <input (change)=\"ff()\"  [disabled]=\"mode=='submit'\" [(ngModel)]=\"opt.isSelected\" type=\"checkbox\" id=\"{{opt.id}}\"  value=\"{{opt.name}}\"/>\r\n    <label>{{opt.name}}</label>\r\n  \r\n</div>\r\n\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-6a47d37e7dc3eb702a1704971475c0eec2a6825adb9c3eae43604c209c435399d451ce54e90bb420b3e5c74fd31544f5a1c5e7ff50ac5422745df2868ffc8508",
            "file": "src/app/share/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-pagination",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "notif",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "p",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "goto",
                    "args": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './pagination.component.html',\r\n  styleUrl: './pagination.component.css'\r\n})\r\nexport class PaginationComponent {\r\n\r\n  @Output()\r\n  notif:EventEmitter<any>=new EventEmitter<any>();\r\n\r\n  @Input()\r\n  total:number;\r\n  p:number=0;\r\n  goto(x:number)\r\n  {\r\n    this.p=x;\r\n    this.notif.emit(this.p);\r\n  }\r\n}\r\n",
            "styleUrl": "./pagination.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<nav aria-label=\"Page navigation example\">\r\n  <ul class=\"pagination\">\r\n    <li class=\"page-item\"><a class=\"page-link\" [hidden]=\"p==0\"  (click)=\"goto(p-1)\">Previous</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">2</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" [hidden]=\"p==total-1\" (click)=\"goto(p+1)\">Next</a></li>\r\n  </ul>\r\n</nav>"
        },
        {
            "name": "PopupComponent",
            "id": "component-PopupComponent-83462a918d49239277da025901acfbc80ff7b87dec1660301485abd22be5d061cbcf6b5e4707b38c7bf6b1c10ee6fb7eb6528d7dddfad57417b01191d3eb21ae",
            "file": "src/app/share/popup/popup.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-popup",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./popup.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-popup',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './popup.component.html',\r\n  styleUrl: './popup.component.css'\r\n})\r\nexport class PopupComponent {\r\n\r\n}\r\n",
            "styleUrl": "./popup.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        ...\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-2865017fe513b1482a4e93b40384f0a11de9141e15e0b0583f23f7308e1f9a181585ca3169e2932053d7b64e12f3bbf9f0cacea2fc4546a799c06febec84f8fb",
            "file": "src/app/features/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-profile",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './profile.component.html',\r\n  styleUrl: './profile.component.css'\r\n})\r\nexport class ProfileComponent {\r\n\r\n}\r\n",
            "styleUrl": "./profile.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>profile works!</p>\r\n"
        },
        {
            "name": "QuestionComponent",
            "id": "component-QuestionComponent-1dbc9290670917a156059bf1fee662c4a5bf458d21178ab223df5eb4ee01086c22e34aa7bfd75c5677ccf00d0620fe479d45e242f4006f666b40e01606116e38",
            "file": "src/app/features/question/question.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-question",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./question.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "mode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "qst",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "getnotif",
                    "args": [
                        {
                            "name": "x",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "iscorrect",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isselected",
                    "args": [],
                    "optional": false,
                    "returnType": "\"alert danger alert-danger\" | \"alert alert-success\" | \"alert alert-primary\"",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "OptionComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { OptionComponent } from \"../option/option.component\";\r\nimport { Question } from '../../core/question';\r\n\r\n@Component({\r\n  selector: 'app-question',\r\n  standalone: true,\r\n  imports: [OptionComponent],\r\n  templateUrl: './question.component.html',\r\n  styleUrl: './question.component.css'\r\n})\r\nexport class QuestionComponent {\r\n\r\n  @Input()\r\n  qst:Question;\r\n\r\n  @Input()\r\n  mode:string\r\n  cls:string;\r\n\r\n  isselected()\r\n  {\r\n     let nb=this.qst.options.filter((o)=>o.isSelected==true).length;\r\n     if(nb==0 && this.mode==\"review\")\r\n     {\r\n       return'alert danger alert-danger'\r\n     }\r\n     else\r\n     {\r\n      if(nb!==0 && this.mode==\"review\")\r\n        return 'alert alert-success'  \r\n      else\r\n        return 'alert alert-primary'\r\n  }\r\n}\r\n\r\niscorrect()\r\n{\r\n  return this.qst.options.every(o=>o.isSelected==o.isAnswer);\r\n}\r\n\r\ngetnotif(x:any)\r\n{\r\n  let nb=this.qst.options.filter(o=>o.isSelected).length;\r\n  if(nb>0)\r\n    this.qst.isresponse=true;\r\n  else\r\n  this.qst.isresponse=false;\r\n\r\n  let cc= this.qst.options.every(o=>o.isSelected==o.isAnswer);\r\n  if(cc===true)\r\n    this.qst.iscorrect=true;\r\n  else\r\n  this.qst.iscorrect=false;\r\n  console.log(this.qst)\r\n}\r\n}\r\n",
            "styleUrl": "./question.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [class]=\"isselected()\" >\r\n    {{qst.name}}\r\n    @if (mode!=='review') {\r\n    @for (o of qst.options; track $index) {\r\n        <app-option [opt]=\"o\" [mode]=\"mode\" (notif)=\"getnotif($event)\"></app-option>\r\n\r\n    }\r\n     @if (mode=='submit') {\r\n    <p >\r\n        votre reponse est : {{iscorrect()?' correct':' incorrect'}}\r\n    </p>\r\n}\r\n}\r\n</div>\r\n"
        },
        {
            "name": "QuestionformComponent",
            "id": "component-QuestionformComponent-3f12ae198ff0b3e5a94ea48a9fbcd350f1bdbb3ab87b3dcf5ac9393a24ac6f1d5dc15b6f1d5870610b51715f5300aceb5e0a96da1db2aa63f7446d2234e6ae0f",
            "file": "src/app/features/questionform/questionform.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-questionform",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./questionform.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "notif",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "qform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "qst",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "addquestion",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgIf } from '@angular/common';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { on } from '@ngrx/store';\r\nimport { Question } from '../../core/question';\r\n\r\n@Component({\r\n  selector: 'app-questionform',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule,NgIf],\r\n  templateUrl: './questionform.component.html',\r\n  styleUrl: './questionform.component.css'\r\n})\r\nexport class QuestionformComponent implements OnInit {\r\n\r\n  qst:Question;\r\n  qform:FormGroup;\r\n\r\n  @Output()\r\n  notif:EventEmitter<any> = new EventEmitter();\r\n  constructor(private fb:FormBuilder) { }\r\n  ngOnInit(): void {\r\n    this.qform = this.fb.group({\r\n      id: ['',Validators.required],\r\n      name: ['',[Validators.required,Validators.minLength(5)]],\r\n     \r\n    });\r\n\r\n  }\r\naddquestion(){\r\n  console.log(this.qform.value);\r\n  \r\n  this.qst = new Question(this.qform.value);\r\n \r\n  this.notif.emit(this.qst);\r\n  console.log(this.qst);\r\n   this.qform.reset();\r\n}\r\n\r\n}\r\n",
            "styleUrl": "./questionform.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<fieldset class=\"border p-3\" [formGroup]=\"qform\">\r\n    <legend class=\"w-auto\">Question</legend>\r\n                <div class=\"mb-3\" >\r\n                    <label for=\"id\" class=\"form-label\">ID:</label>\r\n                    <input  type=\"text\" id=\"id\" class=\"form-control\" formControlName=\"id\">\r\n                    <div *ngIf=\"qform.get('id')?.invalid && (qform.get('id')?.dirty || qform.get('id')?.touched)\" class=\"text-danger\">\r\n                        <div *ngIf=\"qform.get('id')?.errors?.['required']\">ID is required.</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"mb-3\"  >\r\n                    <label for=\"name\" class=\"form-label\">Name:</label>\r\n                    <input type=\"text\" id=\"name\" class=\"form-control\" formControlName=\"name\">\r\n                    <div *ngIf=\"qform.get('name')?.invalid && (qform.get('name')?.dirty || qform.get('name')?.touched)\" class=\"text-danger\">\r\n                        <div *ngIf=\"qform.get('name')?.errors?.['required']\">Name is required.</div>\r\n                        <div *ngIf=\"qform.get('name')?.errors?.['minlength']\">Name must be at least 5 characters long.</div>\r\n                    </div>\r\n                </div>\r\n                <button (click)=\"addquestion()\" class=\"btn btn-primary btn-sm\">Add Question</button>\r\n                </fieldset>"
        },
        {
            "name": "Quiz1Component",
            "id": "component-Quiz1Component-a5f908a21e78ca41a6a2b4377da808215808b1c7eedb92a30c544924adc1dafebf1b401a3a777560ee554adc280d71b981f722ba8aace0d5c757dce9b99a4b96",
            "file": "src/app/components/quiz1/quiz1.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-quiz1",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./quiz1.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "message",
                    "defaultValue": "\"hello\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "mode",
                    "defaultValue": "\"quiz\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "page",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MyserviceService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "txt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "usname",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "changemessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "changemode",
                    "args": [
                        {
                            "name": "m",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "m",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "goto",
                    "args": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngondestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { q } from '../../share/dataquiz';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MyserviceService } from '../../core/services/myservice.service';\r\nimport { AsyncPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-quiz1',\r\n  standalone: true,\r\n  imports: [AsyncPipe],\r\n  templateUrl: './quiz1.component.html',\r\n  styleUrl: './quiz1.component.css'\r\n})\r\nexport class Quiz1Component implements OnInit{\r\n\r\n  @Input()\r\n  username:string;\r\nusname:string | null \r\n  data:any;\r\n  page:number=0;\r\n\r\n  txt:string;\r\n mode:string=\"quiz\";\r\n\r\n  message:string=\"hello\";\r\n  private subscription: any;\r\n  constructor(private route: ActivatedRoute, public service:MyserviceService) {}\r\n  ngOnInit(): void {\r\n\r\n    this.subscription = this.service.message$.subscribe(\r\n      (message: string) => {  \r\n        this.message = message;\r\n        console.log(\"component a recu message from service\",this.message);\r\n      });\r\n  \r\n\r\n    this.usname=this.route.snapshot.paramMap.get('username');\r\n\r\n   this.txt= this.service.sayhollo();\r\n   this.data=this.service.data;\r\n  }\r\n  \r\nchangemessage()\r\n  {\r\n    this.service.updateMessage(\"hello from quiz1\");\r\n  }\r\n  ngondestroy() {\r\n    this.subscription.unsubscribe();  \r\n  }\r\n  goto(x:number)\r\n  {\r\n    this.page=x;\r\n  }\r\n  changemode(m:string)\r\n  {\r\n    this.mode=m;\r\n  }\r\n}\r\n",
            "styleUrl": "./quiz1.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "service",
                        "type": "MyserviceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "service",
                        "type": "MyserviceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n    <div class=\"row\">\r\n         <div class=\"col-md-4\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"changemode('quiz')\">Quiz</button>\r\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"changemode('review')\">Review</button>\r\n<button type=\"button\" class=\"btn btn-warning\" (click)=\"changemode('submit')\">Submit</button>\r\n        </div>\r\n        <h3>{{txt}}</h3>\r\n        {{usname}}\r\n        <h1>{{username}}</h1>\r\n        <p> message recu.... {{message}}</p>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"changemessage()\">update</button>\r\n        <p>message via asy pipe {{service.message$| async }}</p>\r\n        </div>\r\n    <div class=\"row\" [hidden]=\"mode!=='quiz'\">\r\n        <div class=\"col-md-12\">\r\n            \r\n   \r\n        <h1>{{data.name}}</h1>\r\n        <p>{{data.description}}</p>\r\n        @for (qt of data.questions; track $index) {\r\n\r\n            @if ($index==page) {\r\n            <div>\r\n                <h4>{{$index+1}}.{{qt.name}}</h4>\r\n                @for (op of qt.options; track $index) {\r\n                    <div>\r\n                        <input type=\"radio\" id=\"{{op.id}}\" name=\"{{qt.id}}\" value=\"{{op.name}}\"/>\r\n                        <label>{{op.name}}</label>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n    <nav aria-label=\"Page navigation example\">\r\n  <ul class=\"pagination\">\r\n    <li class=\"page-item\"><a class=\"page-link\" (click)=\"goto(page-1)\" [hidden]=\"page==0\" href=\"#\">Previous</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" (click)=\"goto(1)\" href=\"#\">1</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" (click)=\"goto(2)\" href=\"#\">2</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\r\n    <li class=\"page-item\"><a class=\"page-link\" (click)=\"goto(page+1)\" href=\"#\" [hidden]=\"page>=data.questions.length-1\">Next</a></li>\r\n  </ul>\r\n</nav>\r\n      }\r\n}\r\n</div>\r\n        </div>\r\n\r\n\r\n         <div class=\"row\" [hidden]=\"mode!=='review'\">\r\n        <div class=\"col-md-12\">\r\n            \r\n   \r\n        <h1>{{data.name}}</h1>\r\n        <p>{{data.description}}</p>\r\n        @for (qt of data.questions; track $index) {\r\n\r\n        \r\n            <div>\r\n                <h4>{{$index+1}}.{{qt.name}}</h4>\r\n            \r\n            </div>\r\n\r\n        \r\n            \r\n        }\r\n        </div>\r\n                </div>\r\n\r\n\r\n\r\n <div class=\"row\" [hidden]=\"mode!=='submit'\">\r\n        <div class=\"col-md-12\">\r\n            \r\n   \r\n        <h1>{{data.name}}</h1>\r\n        <p>{{data.description}}</p>\r\n        @for (qt of data.questions; track $index) {\r\n\r\n           \r\n            <div>\r\n                <h4>{{$index+1}}.{{qt.name}}</h4>\r\n                @for (op of qt.options; track $index) {\r\n                    <div>\r\n                        <input disabled type=\"radio\" id=\"{{op.id}}\" name=\"{{qt.id}}\" value=\"{{op.name}}\"/>\r\n                        <label>{{op.name}}</label>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n   \r\n      \r\n}\r\n</div>\r\n        </div>\r\n    \r\n    </div>"
        },
        {
            "name": "QuizComponent",
            "id": "component-QuizComponent-84b5226ecb99e376e6c75187a990644dee8e3ce027671e94c1411579de6a29c816943ea01729e747322867c6a6316b7d4116d0195e7dcbc8465c37e9cdd2879c",
            "file": "src/app/features/quiz/quiz.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-quiz",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./quiz.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "aa",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Quiz",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "datastart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "diffmin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "mode",
                    "defaultValue": "\"quiz\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "page",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "changemode",
                    "args": [
                        {
                            "name": "m",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "m",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "recuperer",
                    "args": [
                        {
                            "name": "x",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "QuestionComponent",
                    "type": "component"
                },
                {
                    "name": "PaginationComponent",
                    "type": "component"
                },
                {
                    "name": "ConfigComponent",
                    "type": "component"
                },
                {
                    "name": "DatePipe",
                    "type": "pipe"
                },
                {
                    "name": "QuizPipe",
                    "type": "pipe"
                },
                {
                    "name": "ScorePipe",
                    "type": "pipe"
                },
                {
                    "name": "BackcolorDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { q } from '../../share/dataquiz';\r\nimport { QuestionComponent } from \"../question/question.component\";\r\nimport { Quiz } from '../../core/quiz';\r\nimport { PaginationComponent } from \"../../share/pagination/pagination.component\";\r\nimport { ConfigComponent } from \"../config/config.component\";\r\nimport { DatePipe, JsonPipe } from '@angular/common';\r\nimport { QuizPipe } from '../../share/quiz.pipe';\r\nimport { ScorePipe } from '../../share/score.pipe';\r\nimport { BackcolorDirective } from '../../share/backcolor.directive';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { csharp } from '../../share/csharp';\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  standalone: true,\r\n  imports: [QuestionComponent, PaginationComponent, ConfigComponent,DatePipe,QuizPipe,ScorePipe,BackcolorDirective],\r\n  templateUrl: './quiz.component.html',\r\n  styleUrl: './quiz.component.css'\r\n})\r\nexport class QuizComponent implements OnInit {\r\ndata:Quiz;\r\n  page:number=0;\r\n  mode:string=\"quiz\";\r\n  date:Date;\r\n  datastart:Date;\r\n  diffmin:any;\r\n theme:string\r\n aa:string\r\n  constructor(private route:ActivatedRoute)\r\n  {\r\n      \r\n  }\r\n\r\n  \r\n ngOnInit(): void {\r\n     this.route.params.subscribe(d=>{\r\n        this.theme=d['abc'];\r\n        if(this.theme==\"aspnet\")\r\n          this.data=new Quiz(q);\r\n        else\r\n          this.data=new Quiz(csharp);\r\n\r\n     })\r\n\r\n     \r\n     this.route.queryParams.subscribe(p=>{\r\n     this.aa= p[\"aa\"];\r\n     })\r\n\r\n\r\n     this.datastart=new Date();\r\n\r\n    setInterval(() => {\r\n       this.date=new Date();\r\n\r\n        let d1=this.datastart.getTime();\r\n    let d2=this.date.getTime();\r\n     let diff=d2-d1;\r\n    this.diffmin=Math.floor(diff/(1000));\r\n   \r\n\r\n\r\n    }, 1000);\r\n\r\n\r\n    setInterval(() => {\r\n     if(this.data.config.duration<this.diffmin)\r\n    {\r\n      this.mode=\"submit\";\r\n    }\r\n   }, 3000);\r\n  \r\n  }\r\n\r\nrecuperer(x:any)\r\n{\r\n  \r\n  this.page=x;\r\n   console.log(x+\"------\"+this.page);\r\n}\r\n\r\nchangemode(m:string)\r\n{\r\n  this.mode=m;\r\n  console.log(m);\r\n}\r\n}\r\n",
            "styleUrl": "./quiz.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container exp\">\r\n    <div class=\"row\" appBackcolor=\"green\">\r\n      \r\n        <div class=\"col-md-12\">\r\n           <app-config [data]=\"data.config\"></app-config>\r\n        </div>\r\n    </div>\r\n    <hr/>\r\n     <div class=\"row\">\r\n         <div class=\"col-md-12\">\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"changemode('quiz')\">Quiz</button>\r\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"changemode('review')\" [hidden]=\"!data.config.allowReview\">Review</button>\r\n        <button type=\"button\" class=\"btn btn-warning\" (click)=\"changemode('submit')\">Submit</button>\r\n        </div>\r\n        </div>\r\n        <h1>Bienvenu au quiz  {{theme}}</h1>\r\n        <p>{{aa}}</p>\r\n        @if(mode=='review'){\r\n  <div class=\"row\" >\r\n        <div class=\"col-md-12\" > \r\n            {{data | quiz:'select' }}\r\n            </div>\r\n            </div>\r\n        }\r\n    <div class=\"row\" [hidden]=\"mode!=='quiz'\">\r\n        <div class=\"col-md-12\"> \r\n            @if (data.config.showClock) {              \r\n       <h6>{{date | date:'HH:mm:ss'}}</h6>\r\n       <p>**** {{diffmin}}</p>\r\n            }\r\n<button type=\"button\" class=\"btn btn-lg btn-outline-primary  position-relative\">\r\n  <h1>{{data.name}}</h1>\r\n  <span class=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger\">\r\n    {{data.questions.length}}\r\n    <span class=\"visually-hidden\">unread messages</span>\r\n  </span>\r\n</button>\r\n        <p>{{data.description}}</p>\r\n        @for (q of data.questions; track $index) {       \r\n            @if($index==page){\r\n            <app-question [qst]=\"q\" [mode]=\"'quiz'\"></app-question>\r\n            }\r\n        }\r\n        <app-pagination [total]=\"data.questions.length\" (notif)=\"recuperer($event)\"></app-pagination>\r\n</div>\r\n</div>\r\n  <div class=\"row\" [hidden]=\"mode!=='review'\">\r\n        <div class=\"col-md-12\">                \r\n        <h1>{{data.name}}</h1>\r\n        <p>{{data.description}}</p>\r\n        @for (q of data.questions; track $index) {       \r\n          \r\n            <app-question [qst]=\"q\" [mode]=\"'review'\"></app-question>\r\n            \r\n        }\r\n</div>\r\n</div>\r\n@if (mode=='submit') {\r\n        <div class=\"row\" >\r\n        <div class=\"col-md-12\">                \r\n        <h1>{{data.name}}</h1>\r\n      \r\n        <p>Votre score est :  {{data | score}}</p>\r\n        @for (q of data.questions; track $index) {       \r\n          \r\n            <app-question [qst]=\"q\" [mode]=\"'submit'\"></app-question>\r\n            \r\n        }\r\n       </div>\r\n</div>\r\n}\r\n      "
        },
        {
            "name": "QuizFormComponent",
            "id": "component-QuizFormComponent-bafebe6a03e2469bce350a1c3c7d9a7f647210b8f8b2af8e4e96a81ada5a4e05ed713efe92ff164f6a24305e45a99d844e2efddb4b3c21359f404bc897094ab2",
            "file": "src/app/features/quiz-form/quiz-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-quiz-form",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./quiz-form.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "addq",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "etat",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "msg",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "quiz",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Quiz",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "quizform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "addquestion",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "changemessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getquestion",
                    "args": [
                        {
                            "name": "qst",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "qst",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "send",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "NgIf"
                },
                {
                    "name": "QuestionformComponent",
                    "type": "component"
                },
                {
                    "name": "MsgComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Quiz } from '../../core/quiz';\r\nimport { JsonPipe, NgIf } from '@angular/common';\r\nimport { QuestionformComponent } from \"../questionform/questionform.component\";\r\nimport { ShareService } from '../../core/services/share.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { MsgComponent } from \"../../components/teststate/msg/msg.component\";\r\n\r\n@Component({\r\n  selector: 'app-quiz-form',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule, JsonPipe, NgIf, QuestionformComponent, MsgComponent],\r\n  templateUrl: './quiz-form.component.html',\r\n  styleUrl: './quiz-form.component.css'\r\n})\r\nexport class QuizFormComponent implements OnInit {\r\n\r\n  quizform: FormGroup;\r\n  quiz: Quiz;\r\n  etat: boolean = false;\r\n  addq:boolean = false;\r\n  msg:string=\"\";\r\n // subscription:Subscription;\r\n\r\n  constructor(private readonly service:ShareService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.service.message$.subscribe((msg:string) => {\r\n      this.msg = msg; \r\n      console.log(\"message from quiz : \"+this.msg);\r\n    });\r\n  \r\n\r\n    this.quizform = new FormGroup({\r\n      id: new FormControl('',[Validators.required,Validators.min(1)]),\r\n      name: new FormControl('name'),\r\n      description: new FormControl(),\r\n     \r\n    });\r\n   this.quiz = new Quiz(this.quizform.value);\r\n    console.log(this.quizform.value);\r\n     console.log(\"in init quiz\");\r\n  }\r\n\r\n  changemessage()\r\n  {\r\n    this.service.updatemessage(\"message updated from quiz form\");\r\n    console.log(\"message from quiz form\");\r\n  }\r\n  \r\n  send() {\r\n    this.quiz = new Quiz(this.quizform.value);\r\n    console.log(this.quiz);\r\n    this.etat = true;\r\n  }\r\n\r\n  addquestion() {\r\n    this.addq = true;\r\n  }\r\n \r\n  getquestion(qst: any) {\r\n    this.quiz.questions.push(qst);\r\n    console.log(this.quiz);\r\n    this.addq = false;\r\n  }\r\n}\r\n",
            "styleUrl": "./quiz-form.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "ShareService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "ShareService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\">\r\n  <h1>Quiz Form</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n        <fieldset>\r\n            <legend>Quiz</legend>\r\n        <div>\r\n            {{msg}}\r\n            <p>\r\n                <button (click)=\"changemessage()\" class=\"btn btn-primary btn-sm\">update</button>\r\n            </p>\r\n           \r\n        </div>\r\n    <form [formGroup]=\"quizform\" (ngSubmit)=\"send()\">\r\n        <div class=\"mb-3\">\r\n            <label for=\"id\" class=\"form-label\">Id</label>\r\n            <input type=\"number\" class=\"form-control\" id=\"id\" formControlName=\"id\">\r\n            <div *ngIf=\"quizform.controls['id'].invalid\" id=\"id\" class=\"form-text alert alert-danger\">error</div>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <label for=\"name\" class=\"form-label\">Name</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <label for=\"description\" class=\"form-label\">Description</label>\r\n            <textarea class=\"form-control\" id=\"description\" rows=\"3\" formControlName=\"description\"></textarea>\r\n        </div>\r\n        <button type=\"button\" (click)=\"addquestion()\" class=\"btn btn-success btn-sm\">Add Question</button>\r\n        @if(addq==true){\r\n        <app-questionform (notif)=\"getquestion($event)\"></app-questionform>\r\n        }\r\n        <p>\r\n            {{quizform.value | json}}\r\n            {{quizform.valid}}\r\n            {{quizform.status}}\r\n        </p>\r\n        <p>{{quiz | json}}</p>\r\n        <button [disabled]=\"!quizform.valid\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n    </fieldset>\r\n</div>\r\n</div>\r\n</div>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-d4e74286fda856807265101d66a46a552fd6ad53c79ad3d7deed2fd99c49fd55b255a4fe6a5dbf5e78d57079fb91bc24d1e941a9460fc954a7bcbb4b6d91b7a6",
            "file": "src/app/share/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrl: './sidebar.component.css'\r\n})\r\nexport class SidebarComponent {\r\n\r\n}\r\n",
            "styleUrl": "./sidebar.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"d-flex flex-column flex-shrink-0 p-3 text-bg-dark\" style=\"width: 280px;\"> <a href=\"/\" class=\"d-flex align-items-center mb-3 mb-md-0 me-md-auto text-white text-decoration-none\"> <svg class=\"bi pe-none me-2\" width=\"40\" height=\"32\" aria-hidden=\"true\"><use xlink:href=\"#bootstrap\"></use></svg> <span class=\"fs-4\">Sidebar</span> </a> <hr> <ul class=\"nav nav-pills flex-column mb-auto\"> <li class=\"nav-item\"> <a href=\"#\" class=\"nav-link active\" aria-current=\"page\"> <svg class=\"bi pe-none me-2\" width=\"16\" height=\"16\" aria-hidden=\"true\"><use xlink:href=\"#home\"></use></svg>\r\nHome\r\n</a> </li> <li> <a href=\"#\" class=\"nav-link text-white\"> <svg class=\"bi pe-none me-2\" width=\"16\" height=\"16\" aria-hidden=\"true\"><use xlink:href=\"#speedometer2\"></use></svg>\r\nDashboard\r\n</a> </li> <li> <a href=\"#\" class=\"nav-link text-white\"> <svg class=\"bi pe-none me-2\" width=\"16\" height=\"16\" aria-hidden=\"true\"><use xlink:href=\"#table\"></use></svg>\r\nOrders\r\n</a> </li> <li> <a href=\"#\" class=\"nav-link text-white\"> <svg class=\"bi pe-none me-2\" width=\"16\" height=\"16\" aria-hidden=\"true\"><use xlink:href=\"#grid\"></use></svg>\r\nProducts\r\n</a> </li> <li> <a href=\"#\" class=\"nav-link text-white\"> <svg class=\"bi pe-none me-2\" width=\"16\" height=\"16\" aria-hidden=\"true\"><use xlink:href=\"#people-circle\"></use></svg>\r\nCustomers\r\n</a> </li> </ul> <hr> <div class=\"dropdown\"> <a href=\"#\" class=\"d-flex align-items-center text-white text-decoration-none dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> <img src=\"https://github.com/mdo.png\" alt=\"\" width=\"32\" height=\"32\" class=\"rounded-circle me-2\"> <strong>mdo</strong> </a> <ul class=\"dropdown-menu dropdown-menu-dark text-small shadow\"> <li><a class=\"dropdown-item\" href=\"#\">New project...</a></li> <li><a class=\"dropdown-item\" href=\"#\">Settings</a></li> <li><a class=\"dropdown-item\" href=\"#\">Profile</a></li> <li><hr class=\"dropdown-divider\"></li> <li><a class=\"dropdown-item\" href=\"#\">Sign out</a></li> </ul> </div> </div>"
        },
        {
            "name": "ThemeComponent",
            "id": "component-ThemeComponent-7c6b6f79dac79c9a54c7e3a27a330a3bb0d13affb8d4b1c0c46365f38f871984716c0b39fb8b5046364a4874c852463bf4a82d8f66ecd4114bd5064c3f8768d8",
            "file": "src/app/features/theme/theme.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-theme",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./theme.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { RouterLink, RouterLinkActive } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-theme',\r\n  standalone: true,\r\n  imports: [RouterLink,RouterLinkActive],\r\n  templateUrl: './theme.component.html',\r\n  styleUrl: './theme.component.css'\r\n})\r\nexport class ThemeComponent {\r\n\r\n  @Input()\r\n  data:any\r\n}\r\n",
            "styleUrl": "./theme.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"card\" style=\"width: 18rem;\">\r\n  <img [src]=\"data.logo\" class=\"card-img-top logo\" alt=\"...\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{{data.title}}</h5>\r\n    <p class=\"card-text\">{{data.description}}</p>\r\n    <a href=\"/quiz/{{data.slug}}\" class=\"btn btn-outline-primary btn-sm\">Go somewhere</a>\r\n   <a [routerLink]=\"['/quiz',data.slug]\" routerLinkActive=\"active\" class=\"btn btn-outline-primary btn-sm\">Go</a>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ThemeListComponent",
            "id": "component-ThemeListComponent-58afdba4be2fb9153f46b1f593f268b9da65bb9d80efa58be074c652d69e2cac6b532a53420ae31408ff0f2f8b22162a1331b04eb5952fb2775ba733e4d0d02a",
            "file": "src/app/features/theme-list/theme-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-theme-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./theme-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "datatheme",
                    "defaultValue": "themes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "p",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "xx",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "recuperer",
                    "args": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ThemeComponent",
                    "type": "component"
                },
                {
                    "name": "PaginationComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { themes } from '../../share/themes';\r\nimport { ThemeComponent } from \"../theme/theme.component\";\r\nimport { PaginationComponent } from \"../../share/pagination/pagination.component\";\r\n\r\n@Component({\r\n  selector: 'app-theme-list',\r\n  standalone: true,\r\n  imports: [ThemeComponent, PaginationComponent],\r\n  templateUrl: './theme-list.component.html',\r\n  styleUrl: './theme-list.component.css'\r\n})\r\nexport class ThemeListComponent {\r\n  datatheme=themes;\r\n  p:number=0;\r\nxx:number=0;\r\n  recuperer(x:number)\r\n  {\r\n    if(this.xx<x)\r\n    {this.p=this.p+3;}\r\n  else\r\n  this.p=this.p-3;\r\n    this.xx=x;\r\n     console.log(this.p);\r\n  }\r\n\r\n}\r\n",
            "styleUrl": "./theme-list.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <h1>Theme List</h1>\r\n      <div class=\"row\">\r\n        @for (theme of datatheme; track $index) {\r\n           \r\n            @if($index<p+3 && $index>=p){\r\n              \r\n           \r\n        <div  class=\"col-md-4\">\r\n          <app-theme [data]=\"theme\"></app-theme>\r\n        </div>\r\n         }\r\n    }\r\n      </div>\r\n      <app-pagination [total]=\"datatheme.length\"  (notif)=\"recuperer($event)\"></app-pagination>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "TopMenuComponent",
            "id": "component-TopMenuComponent-496390455502fa69e7a9524347366eb254900782a900862a292c81d4003b9abea53c64b1150fef7c435f9f09c646b51df089d0c49039be611845804220f4b1d3",
            "file": "src/app/share/top-menu/top-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-menu",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./top-menu.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "service",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MyserviceService",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changemessage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngonInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "SidebarComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\r\nimport { SidebarComponent } from \"../sidebar/sidebar.component\";\r\nimport { MyserviceService } from '../../core/services/myservice.service';\r\n\r\n@Component({\r\n  selector: 'app-top-menu',\r\n  standalone: true,\r\n  imports: [RouterOutlet, SidebarComponent,RouterLink,RouterLinkActive],\r\n  templateUrl: './top-menu.component.html',\r\n  styleUrl: './top-menu.component.css'\r\n})\r\nexport class TopMenuComponent {\r\n\r\n  constructor(public service:MyserviceService) {}\r\n\r\n  ngonInit() {\r\n    console.log(\"TopMenuComponent initialized\");\r\n  }\r\n  changemessage() {\r\n    this.service.updateMessage(\"Hello from TopMenuComponent\");\r\n  }\r\n}\r\n",
            "styleUrl": "./top-menu.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "MyserviceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "MyserviceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<header class=\"p-3 text-bg-dark\"> \r\n    <div class=\"container\"> \r\n        <div class=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\"> <a href=\"/\" class=\"d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none\"> \r\n            <svg class=\"bi me-2\" width=\"40\" height=\"32\" role=\"img\" aria-label=\"Bootstrap\">\r\n                <use xlink:href=\"#bootstrap\"></use></svg> \r\n            </a> \r\n            <ul class=\"nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0\"> \r\n                <li><a routerLink=\"home\" routerLinkActive=\"active\" class=\"nav-link px-2 text-secondary\">Home</a></li> \r\n                <li><a routerLink=\"theme\" routerLinkActive=\"active\" class=\"nav-link px-2 text-white\">Themes</a></li> \r\n                <li><a routerLink=\"quiz/abc\" routerLinkActive=\"active\" class=\"nav-link px-2 text-white\">Quiz</a></li>\r\n                 <li><a routerLink=\"users\" class=\"nav-link px-2 text-white\">Users</a></li> \r\n                 <li><a href=\"#\" class=\"nav-link px-2 text-white\">About</a></li> \r\n                </ul> \r\n                <form class=\"col-12 col-lg-auto mb-3 mb-lg-0 me-lg-3\" role=\"search\">\r\n                 <input [value]=\"service.getcurrentMessage()\" type=\"search\" class=\"form-control form-control-dark text-bg-dark\" placeholder=\"Search...\" aria-label=\"Search\"> \r\n                </form> \r\n                <div class=\"text-end\"> \r\n                    <button type=\"button\" class=\"btn btn-outline-light me-2\">Login</button> \r\n                    <button type=\"button\" class=\"btn btn-warning me-2\">Sign-up</button> \r\n                    <button type=\"button\" (click)=\"changemessage()\" class=\"btn btn-outline-light me-2 btn-success\">change me</button> \r\n\r\n                </div> \r\n            </div> \r\n        </div> \r\n    </header>\r\n\r\n<router-outlet></router-outlet>"
        },
        {
            "name": "UserComponent",
            "id": "component-UserComponent-ace43789e300669ed69c2e9894b8c640f295e68af1c85f68130717a4db0efc9411daf4d4d31851795c0aacb7cbc017606ef44c58d9420e5fa6a91afda3516733",
            "file": "src/app/features/user/user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "users",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "PopupComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../core/services/user.service';\r\nimport { PopupComponent } from \"../../share/popup/popup.component\";\r\nimport { RouterLink, RouterLinkActive } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  standalone: true,\r\n  imports: [PopupComponent,RouterLink,RouterLinkActive],\r\n  templateUrl: './user.component.html',\r\n  styleUrl: './user.component.css'\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  users:any;\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.userService.getusers()\r\n    .subscribe((data) => {\r\n      console.log(data);\r\n      this.users = data;\r\n    });\r\n    console.log(\"apres....\")\r\n\r\n  }\r\n}\r\n",
            "styleUrl": "./user.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <h1>Theme Users</h1>\r\n            <div class=\"row\" >\r\n            @for (u of users; track $index) {\r\n                   <div class=\"card\" style=\"width: 18rem;\">\r\n  <img src=\"assets/images/user.png\" class=\"card-img-top user-logo\" alt=\"...\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">{{u.name}}</h5>\r\n    <p class=\"card-text\">{{u.username}}</p>\r\n    <p class=\"card-text\">{{u.email}}</p>\r\n    <a [routerLink]=\"['/users',u.id]\" class=\"btn btn-primary btn-sm\">Profile</a>\r\n  </div>\r\n</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "UserDetailComponent",
            "id": "component-UserDetailComponent-f2f1f91896cec81a6c4d3cf82764946d7cf22f8cd8748ea7374c6f75b23d12e1d40bc45f9a9877efcec01bde8947e5e5cca6df7f20f96669f22be592dfc60061",
            "file": "src/app/features/user-detail/user-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-detail",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./user-detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { UserService } from '../../core/services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { JsonPipe } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  standalone: true,\r\n  imports: [JsonPipe],\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrl: './user-detail.component.css'\r\n})\r\nexport class UserDetailComponent {\r\nid:number;\r\nuser:any;\r\n  constructor(private userService: UserService,private route:ActivatedRoute) { }\r\n  ngOnInit() {\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.id = params['id'];\r\n      console.log(this.id);\r\n    });\r\n    this.userService.getuser(this.id)\r\n      .subscribe((data) => {\r\n        console.log(data);\r\n        this.user = data;\r\n      });\r\n    console.log(\"apres....\")\r\n  }\r\n}\r\n",
            "styleUrl": "./user-detail.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "\r\n<div class=\"container\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">\r\n            User Details\r\n        </div>\r\n        <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{user.name}}</h5>\r\n            <p class=\"card-text\">Username: {{user.username}}</p>\r\n            <p class=\"card-text\">Email: {{user.email}}</p>\r\n        </div>\r\n        <ul class=\"list-group list-group-flush\">\r\n            <li class=\"list-group-item\">Phone: {{user.phone}}</li>\r\n            <li class=\"list-group-item\">Website: {{user.website}}</li>\r\n            <li class=\"list-group-item\">\r\n                Address: {{user.address.street}}, {{user.address.suite}}, {{user.address.city}}, {{user.address.zipcode}}\r\n            </li>\r\n            <li class=\"list-group-item\">Company: {{user.company.name}}</li>\r\n        </ul>\r\n    </div>\r\n</div>"
        },
        {
            "name": "UserformComponent",
            "id": "component-UserformComponent-88f10d31c5d34237ace3263a88d85d50ef2054dd5099aec7583acc6cffee18e31c7f2ff7f132610feee90dafaba3ede608751552a0881e0bca85a13e16545cbb",
            "file": "src/app/features/userform/userform.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-userform",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./userform.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "alpha",
                    "defaultValue": "\"abc\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "etat",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "u",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "addUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "recuper",
                    "args": [
                        {
                            "name": "x",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "x",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "JsonPipe",
                    "type": "pipe"
                },
                {
                    "name": "CompanyformComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { JsonPipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { User } from '../../core/user';\r\nimport { UserService } from '../../core/services/user.service';\r\nimport { CompanyformComponent } from \"../companyform/companyform.component\";\r\n\r\n@Component({\r\n  selector: 'app-userform',\r\n  standalone: true,\r\n  imports: [FormsModule, JsonPipe, CompanyformComponent],\r\n  templateUrl: './userform.component.html',\r\n  styleUrl: './userform.component.css'\r\n})\r\nexport class UserformComponent {\r\n  etat:boolean = false;\r\naddUser() {\r\nthis.service.addUser(this.u).subscribe((data) => {\r\n      console.log(data);    \r\n})\r\n}\r\nalpha=\"abc\";\r\nu:User;\r\n  constructor(private service:UserService) {\r\n    this.u = new User();\r\n    this.u.name = \"\";\r\n    this.u.email = \"\";\r\n\r\n    \r\n}\r\nrecuper(x:any) {\r\n  \r\n  console.log(x);\r\n  this.etat=x;\r\n}\r\n}",
            "styleUrl": "./userform.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <h1>User Form</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <form>\r\n  <div class=\"mb-3\">\r\n    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n    <input #name=\"ngModel\" name=\"name\"  [(ngModel)]=\"u.name\" type=\"text\" class=\"form-control\" required id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\r\n    <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n  </div>\r\n  <div class=\"mb-3\">\r\n    \r\n    <label for=\"exampleInputPassword1\" class=\"form-label\">Username</label>\r\n    <input #un=\"ngModel\" name=\"un\"   [(ngModel)]=\"u.username\" type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n  </div>\r\n  <div class=\"mb-3 form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\r\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n  </div>\r\n  <app-companyform (notif)=\"recuper($event)\"></app-companyform>\r\n  <button  (click)=\"addUser()\" [disabled]=\"name.invalid || un.invalid || etat==false\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n</form>\r\n\r\n\r\n{{alpha}}\r\n@if(name.invalid && (name.dirty || name.touched)) {\r\n<div class=\"alert alert-danger\" role=\"alert\">\r\n    \r\n        Name must be at least \r\n</div>\r\n\r\n}\r\n{{u | json}}\r\n    </div>\r\n    \r\n  </div>\r\n"
        },
        {
            "name": "UserformreactiveComponent",
            "id": "component-UserformreactiveComponent-51d01d1bf21b078cff9542f5d15ea489150f962dcfb7675cd879a0c737717bd98201b9dd6c6eed56296d240d012ac3d497636973d5796ce1760e6033448349a4",
            "file": "src/app/features/userformreactive/userformreactive.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-userformreactive",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./userformreactive.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "id",
                    "defaultValue": "new FormControl('',Validators.required)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "name",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "addUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngoninit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { User } from '../../core/user';\r\n\r\n@Component({\r\n  selector: 'app-userformreactive',\r\n  standalone: true,\r\n  imports: [ReactiveFormsModule],\r\n  templateUrl: './userformreactive.component.html',\r\n  styleUrl: './userformreactive.component.css'\r\n})\r\nexport class UserformreactiveComponent {\r\n\r\n  user:User;\r\n  id:FormControl=new FormControl('',Validators.required)\r\n  name:FormControl=new FormControl();\r\n  email:FormControl=new FormControl();\r\n\r\n  constructor() { \r\n    this.user = new User();\r\n    this.user.name = \"\";\r\n    this.user.email = \"\";\r\n  }\r\n\r\n  ngoninit() {\r\n    this.id.setValue(\"1\");\r\n  }\r\n  addUser() {\r\n    this.user.id = this.id.value;\r\n    this.user.name = this.name.value;\r\n    this.user.email = this.email.value;\r\n    console.log(this.user);\r\n  }\r\n  \r\n}\r\n",
            "styleUrl": "./userformreactive.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <h1>User Form</h1>\r\n  <div class=\"row\">\r\n    <div class=\"col-6\">\r\n      <form>\r\n        <div class=\"mb-3\">\r\n    <label for=\"id\" class=\"form-label\">ID</label>\r\n    <input [formControl]=\"id\"  name=\"id\"  type=\"number\" class=\"form-control\" required id=\"id\" aria-describedby=\"emailHelp\">\r\n    <div id=\"emailHelp\" class=\"form-text\">id non negative</div>\r\n  </div>\r\n  <div class=\"mb-3\">\r\n    <label for=\"name\" class=\"form-label\">Email address</label>\r\n    <input [formControl]=\"name\"   name=\"name\"  type=\"text\" class=\"form-control\" required id=\"name\" aria-describedby=\"emailHelp\">\r\n    <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n  </div>\r\n  <div class=\"mb-3\">\r\n    \r\n    <label for=\"email\" class=\"form-label\">Username</label>\r\n    <input [formControl]=\"email\"  name=\"email\"   type=\"email\" class=\"form-control\" id=\"email\">\r\n  </div>\r\n    <button (click)=\"addUser()\" type=\"button\" class=\"btn btn-primary\">Submit</button>\r\n\r\n  </form>\r\n  </div>\r\n  </div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "allowback",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[config] Allowback',props<{ value: boolean }>())"
            },
            {
                "name": "allowreview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[config] Allowreview',props<{ value: boolean }>())"
            },
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes,  withComponentInputBinding()),\r\n    provideHttpClient(withFetch()),\r\n    provideStore({\r\n      // Ici, on dit que la \"slice\" d'Ã©tat nommÃ©e 'counter' sera gÃ©rÃ©e par counterReducer\r\n      counter: counterReducer,\r\n      config: configreducer\r\n    })\r\n],\r\n}"
            },
            {
                "name": "configreducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n\r\n   /* {\r\n        allowreview: false,\r\n        allowback: false,\r\n        duration: 0\r\n    }*/\r\n         initialConfigState,\r\n\r\n     on(allowreview, (state, { value }) => ({ ...state, allowreview: value })),\r\n     on(allowback, (state, { value }) => ({ ...state, allowback: value })),\r\n     on(duration, (state, { value }) => ({ ...state, duration: value }))\r\n\r\n)"
            },
            {
                "name": "counterReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialCounterState, // Ou l'Ã©tat initial (ici { counter: 0 })\r\n\r\n  // Quand l'action 'increment' est Ã©mise :\r\n  on(increment, (state) => ({\r\n    // On retourne un NOUVEL objet Ã©tat (immutabilitÃ©)\r\n    ...state, // Copie des autres propriÃ©tÃ©s de l'Ã©tat (ici, il n'y en a pas)\r\n    counter: state.counter + 1 // On met Ã  jour la propriÃ©tÃ© counter\r\n  })),\r\n\r\n  // Quand l'action 'decrement' est Ã©mise :\r\n  on(decrement, (state) => ({\r\n    ...state,\r\n    counter: state.counter - 1\r\n  })),\r\n\r\n  // Quand l'action 'reset' est Ã©mise :\r\n  on(reset, (state, { value }) => ({ // On dÃ©structure 'value' des 'props' de l'action\r\n    ...state,\r\n    counter: value // On met Ã  jour la propriÃ©tÃ© counter avec la valeur passÃ©e\r\n  }))\r\n)"
            },
            {
                "name": "csharp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/share/csharp.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    \"id\": 2,\r\n    \"name\": \"C# and .Net Framework\",\r\n    \"description\": \"C# and .Net Quiz (contains C#, .Net Framework, Linq, etc.)\",\r\n   \"config\":{\r\n    allowBack: true,\r\n    allowReview: true,\r\n    autoMove: false,    \r\n    duration: 10,  // \r\n    pageSize: 1,\r\n    requiredAll: false,\r\n    richText: false,\r\n    shuffleQuestions: false,\r\n    shuffleOptions: false,\r\n    showClock: true,\r\n    showPager: true\r\n    \r\n    },\r\n    \"questions\": [\r\n        {\r\n            \"id\": 1010,\r\n            \"name\": \"Which of the following assemblies can be stored in Global Assembly Cache?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Private Assemblies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Friend Assemblies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Public Assemblies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Shared Assemblies\",\r\n                    \"isAnswer\": true\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1011,\r\n            \"name\": \"Which of the following .NET components can be used to remove unused references from the managed heap?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Language Infrastructure\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"CLR\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Garbage Collector\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Class Loader\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"CTS\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1012,\r\n            \"name\": \"Which of the following utilities can be used to compile managed assemblies into processor-specific native code?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"gacutil\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ngen\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"dumpbin\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ildasm\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1013,\r\n            \"name\": \"Which of the following is NOT an Arithmetic operator in C#.NET?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"** (Double Star)\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"+ (Plus)\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"/ (Divide)\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"% (Modulo)\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1014,\r\n            \"name\": \"Which of the following statements is correct about an interface used in C#.NET?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"If a class implements an interface partially, then it should be an abstract class.\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"A class cannot implement an interface partially.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"An interface can contain static methods.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"An interface can contain static data.\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1015,\r\n            \"name\": \"What does the term <strong>immutable</strong> means in term of string objects?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"We can modify characters included in the string\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"We cannot modify characters contained in the string\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"We cannot perform various operation of comparison, inserting, appending etc\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1016,\r\n            \"name\": \"Which of the following is NOT a .NET Exception class?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Exception\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"StackMemoryException\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"DivideByZeroException\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"InvalidOperationException\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1017,\r\n            \"name\": \"In C#.NET if we do not catch the exception thrown at runtime then which of the following will catch it?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Compiler\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"CLR\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Linker\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Operating system\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1018,\r\n            \"name\": \"Which of the following statements are correct about delegates?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Delegates cannot be used to call a static method of a class.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Delegates cannot be used to call procedures that receive variable number of arguments.\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"If signatures of two methods are same they can be called through the same delegate object.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Delegates cannot be used to call an instance function. Delegates cannot be used to call an instance subroutine.\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1019,\r\n            \"name\": \"Which of the following does NOT represent Integer?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Char\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Byte\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Short\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Long\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        }\r\n    ]\r\n}"
            },
            {
                "name": "decrement",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Counter] Decrement')"
            },
            {
                "name": "duration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[config] Duration',props<{ value: number }>())"
            },
            {
                "name": "increment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Counter] Increment')"
            },
            {
                "name": "initialConfigState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/configstate.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ConfigState",
                "defaultValue": "{\r\n  config: new QuizConfig({\r\n    allowBack: true,\r\n    allowReview: true,\r\n    autoMove: false,    \r\n    duration: 10,  \r\n    pageSize: 1,\r\n    requiredAll: false,\r\n    richText: false,\r\n    shuffleQuestions: false,\r\n    shuffleOptions: false,\r\n    showClock: true,\r\n    showPager: true\r\n    \r\n    }) // Initialiser avec une instance de QuizConfig \r\n}"
            },
            {
                "name": "initialCounterState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.state.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CounterState",
                "defaultValue": "{\r\n  counter: 0\r\n  ,configdata:new QuizConfig({}) // Initialiser avec une instance de QuizConfig\r\n}"
            },
            {
                "name": "q",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/share/dataquiz.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    \"id\": 1,\r\n    \"name\": \"Asp.Net Quiz\",\r\n    \"description\": \"Asp.Net Quiz (contains webform, mvc, web API, etc.)\",\r\n    \"questions\": [\r\n        {\r\n            \"id\": 1010,\r\n            \"name\": \"ASP.NET webform separates the HTML output from program logic using a feature named as\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Exception\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Code-behind\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Code-front\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1011,\r\n            \"name\": \"The feature in ASP.NET 2.0 that is used to fire a normal postback to a different page in the application is called\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Theme\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Code-front\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Cross Page Posting\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1012,\r\n            \"name\": \"What class does the ASP.NET Web Form class inherit from by default?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.UI.Page\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.UI.Form\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.GUI.Page\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.Form\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1013,\r\n            \"name\": \"What does MVC stand for?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Model View Controller\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Maximum Virtual Control\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Microsoft Visual Core\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1014,\r\n            \"name\": \"Which of the following does NOT require type casting?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"TempData\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ViewData\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ViewBag\",\r\n                    \"isAnswer\": true\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1015,\r\n            \"name\": \"Which is the correct order of Page life-cycle in asp.net webform?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Init, PreRender, Load\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Load, PreRender, Init\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Init, Load, PreRender\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1016,\r\n            \"name\": \"Which of these data source controls do not implement caching?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ObjectDataSource\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"LinqDataSource\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"SqlDataSource\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"XmlDataSource\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1017,\r\n            \"name\": \"Which tag asp:Label control by default renders to?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"div\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"span\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"body\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"label\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1018,\r\n            \"name\": \"Which method do you use to explicitly kill a user's session?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.Terminate()\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.TimeOut()\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.Abondon()\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.Kill()\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1019,\r\n            \"name\": \"Which of the following object is ideal for keeping data alive for a single request?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"HttpContext\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Cookies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"SqlServer\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        }\r\n    ],\r\n  \"config\":{\r\n    allowBack: true,\r\n    allowReview: true,\r\n    autoMove: false,    \r\n    duration: 10,  // \r\n    pageSize: 1,\r\n    requiredAll: false,\r\n    richText: false,\r\n    shuffleQuestions: false,\r\n    shuffleOptions: false,\r\n    showClock: true,\r\n    showPager: true\r\n    \r\n    }\r\n}"
            },
            {
                "name": "reset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Counter] Reset', props<{ value: number }>())"
            },
            {
                "name": "selectallowbackValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.selecteur.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectConfigState, // SÃ©lectionne la slice de l'Ã©tat 'config'\r\n  (state: ConfigState) => state.config.allowBack // Retourne la valeur de 'allowback' dans cette slice\r\n)"
            },
            {
                "name": "selectAllowReview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.selecteur.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: ConfigState) => state.config.allowReview"
            },
            {
                "name": "selectback",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.selecteur.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "selectallowbackValue"
            },
            {
                "name": "selectConfigState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/config.selecteur.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<ConfigState>('config')"
            },
            {
                "name": "selectCounter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "selectCounterValue"
            },
            {
                "name": "selectCounterState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<CounterState>('counter')"
            },
            {
                "name": "selectCounterValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/state/counter.selectors.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\r\n  selectCounterState, // Prend la slice counter comme input\r\n  (state: CounterState) => state.counter // Retourne la valeur de 'counter' dans cette slice\r\n)"
            },
            {
                "name": "themes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/share/themes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[{\r\n\t\t\"slug\": \"aspnet\",\r\n\t\t\"title\": \"AspNet\",\r\n\t\t\"logo\": \"assets/images/aspnet.png\",\r\n\t\t\"description\": \"description\"\r\n\t},\r\n    {\r\n\t\t\"slug\": \"typescript\",\r\n\t\t\"title\": \"TypeScript\",\r\n\t\t\"logo\": \"assets/images/typescript.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"ecma\",\r\n\t\t\"title\": \"ECMAScript 6\",\r\n\t\t\"logo\": \"assets/images/js.jpg\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t},{\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t},{\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t},{\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t}]"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/core/state/config.actions.ts": [
                {
                    "name": "allowback",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[config] Allowback',props<{ value: boolean }>())"
                },
                {
                    "name": "allowreview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[config] Allowreview',props<{ value: boolean }>())"
                },
                {
                    "name": "duration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[config] Duration',props<{ value: number }>())"
                }
            ],
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideRouter(routes,  withComponentInputBinding()),\r\n    provideHttpClient(withFetch()),\r\n    provideStore({\r\n      // Ici, on dit que la \"slice\" d'Ã©tat nommÃ©e 'counter' sera gÃ©rÃ©e par counterReducer\r\n      counter: counterReducer,\r\n      config: configreducer\r\n    })\r\n],\r\n}"
                }
            ],
            "src/app/core/state/config.reducer.ts": [
                {
                    "name": "configreducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n\r\n   /* {\r\n        allowreview: false,\r\n        allowback: false,\r\n        duration: 0\r\n    }*/\r\n         initialConfigState,\r\n\r\n     on(allowreview, (state, { value }) => ({ ...state, allowreview: value })),\r\n     on(allowback, (state, { value }) => ({ ...state, allowback: value })),\r\n     on(duration, (state, { value }) => ({ ...state, duration: value }))\r\n\r\n)"
                }
            ],
            "src/app/core/state/counter.reducer.ts": [
                {
                    "name": "counterReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialCounterState, // Ou l'Ã©tat initial (ici { counter: 0 })\r\n\r\n  // Quand l'action 'increment' est Ã©mise :\r\n  on(increment, (state) => ({\r\n    // On retourne un NOUVEL objet Ã©tat (immutabilitÃ©)\r\n    ...state, // Copie des autres propriÃ©tÃ©s de l'Ã©tat (ici, il n'y en a pas)\r\n    counter: state.counter + 1 // On met Ã  jour la propriÃ©tÃ© counter\r\n  })),\r\n\r\n  // Quand l'action 'decrement' est Ã©mise :\r\n  on(decrement, (state) => ({\r\n    ...state,\r\n    counter: state.counter - 1\r\n  })),\r\n\r\n  // Quand l'action 'reset' est Ã©mise :\r\n  on(reset, (state, { value }) => ({ // On dÃ©structure 'value' des 'props' de l'action\r\n    ...state,\r\n    counter: value // On met Ã  jour la propriÃ©tÃ© counter avec la valeur passÃ©e\r\n  }))\r\n)"
                }
            ],
            "src/app/share/csharp.ts": [
                {
                    "name": "csharp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/share/csharp.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    \"id\": 2,\r\n    \"name\": \"C# and .Net Framework\",\r\n    \"description\": \"C# and .Net Quiz (contains C#, .Net Framework, Linq, etc.)\",\r\n   \"config\":{\r\n    allowBack: true,\r\n    allowReview: true,\r\n    autoMove: false,    \r\n    duration: 10,  // \r\n    pageSize: 1,\r\n    requiredAll: false,\r\n    richText: false,\r\n    shuffleQuestions: false,\r\n    shuffleOptions: false,\r\n    showClock: true,\r\n    showPager: true\r\n    \r\n    },\r\n    \"questions\": [\r\n        {\r\n            \"id\": 1010,\r\n            \"name\": \"Which of the following assemblies can be stored in Global Assembly Cache?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Private Assemblies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Friend Assemblies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Public Assemblies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Shared Assemblies\",\r\n                    \"isAnswer\": true\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1011,\r\n            \"name\": \"Which of the following .NET components can be used to remove unused references from the managed heap?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Language Infrastructure\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"CLR\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Garbage Collector\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Class Loader\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"CTS\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1012,\r\n            \"name\": \"Which of the following utilities can be used to compile managed assemblies into processor-specific native code?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"gacutil\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ngen\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"dumpbin\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ildasm\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1013,\r\n            \"name\": \"Which of the following is NOT an Arithmetic operator in C#.NET?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"** (Double Star)\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"+ (Plus)\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"/ (Divide)\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"% (Modulo)\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1014,\r\n            \"name\": \"Which of the following statements is correct about an interface used in C#.NET?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"If a class implements an interface partially, then it should be an abstract class.\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"A class cannot implement an interface partially.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"An interface can contain static methods.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"An interface can contain static data.\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1015,\r\n            \"name\": \"What does the term <strong>immutable</strong> means in term of string objects?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"We can modify characters included in the string\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"We cannot modify characters contained in the string\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"We cannot perform various operation of comparison, inserting, appending etc\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1016,\r\n            \"name\": \"Which of the following is NOT a .NET Exception class?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Exception\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"StackMemoryException\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"DivideByZeroException\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"InvalidOperationException\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1017,\r\n            \"name\": \"In C#.NET if we do not catch the exception thrown at runtime then which of the following will catch it?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Compiler\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"CLR\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Linker\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Operating system\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1018,\r\n            \"name\": \"Which of the following statements are correct about delegates?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Delegates cannot be used to call a static method of a class.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Delegates cannot be used to call procedures that receive variable number of arguments.\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"If signatures of two methods are same they can be called through the same delegate object.\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Delegates cannot be used to call an instance function. Delegates cannot be used to call an instance subroutine.\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1019,\r\n            \"name\": \"Which of the following does NOT represent Integer?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Char\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Byte\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Short\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Long\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        }\r\n    ]\r\n}"
                }
            ],
            "src/app/core/state/counter.actions.ts": [
                {
                    "name": "decrement",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Counter] Decrement')"
                },
                {
                    "name": "increment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Counter] Increment')"
                },
                {
                    "name": "reset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Counter] Reset', props<{ value: number }>())"
                }
            ],
            "src/app/core/state/configstate.ts": [
                {
                    "name": "initialConfigState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/configstate.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigState",
                    "defaultValue": "{\r\n  config: new QuizConfig({\r\n    allowBack: true,\r\n    allowReview: true,\r\n    autoMove: false,    \r\n    duration: 10,  \r\n    pageSize: 1,\r\n    requiredAll: false,\r\n    richText: false,\r\n    shuffleQuestions: false,\r\n    shuffleOptions: false,\r\n    showClock: true,\r\n    showPager: true\r\n    \r\n    }) // Initialiser avec une instance de QuizConfig \r\n}"
                }
            ],
            "src/app/core/state/counter.state.ts": [
                {
                    "name": "initialCounterState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.state.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CounterState",
                    "defaultValue": "{\r\n  counter: 0\r\n  ,configdata:new QuizConfig({}) // Initialiser avec une instance de QuizConfig\r\n}"
                }
            ],
            "src/app/share/dataquiz.ts": [
                {
                    "name": "q",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/share/dataquiz.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    \"id\": 1,\r\n    \"name\": \"Asp.Net Quiz\",\r\n    \"description\": \"Asp.Net Quiz (contains webform, mvc, web API, etc.)\",\r\n    \"questions\": [\r\n        {\r\n            \"id\": 1010,\r\n            \"name\": \"ASP.NET webform separates the HTML output from program logic using a feature named as\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Exception\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Code-behind\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Code-front\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1011,\r\n            \"name\": \"The feature in ASP.NET 2.0 that is used to fire a normal postback to a different page in the application is called\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Theme\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Code-front\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Cross Page Posting\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1012,\r\n            \"name\": \"What class does the ASP.NET Web Form class inherit from by default?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.UI.Page\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.UI.Form\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.GUI.Page\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"System.Web.Form\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1013,\r\n            \"name\": \"What does MVC stand for?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Model View Controller\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Maximum Virtual Control\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Microsoft Visual Core\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1014,\r\n            \"name\": \"Which of the following does NOT require type casting?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"TempData\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ViewData\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ViewBag\",\r\n                    \"isAnswer\": true\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1015,\r\n            \"name\": \"Which is the correct order of Page life-cycle in asp.net webform?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Init, PreRender, Load\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Load, PreRender, Init\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Init, Load, PreRender\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"None of the above\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1016,\r\n            \"name\": \"Which of these data source controls do not implement caching?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"ObjectDataSource\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"LinqDataSource\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"SqlDataSource\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"XmlDataSource\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1017,\r\n            \"name\": \"Which tag asp:Label control by default renders to?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"div\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"span\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"body\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"label\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1018,\r\n            \"name\": \"Which method do you use to explicitly kill a user's session?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.Terminate()\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.TimeOut()\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.Abondon()\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session.Kill()\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        },\r\n        {\r\n            \"id\": 1019,\r\n            \"name\": \"Which of the following object is ideal for keeping data alive for a single request?\",\r\n            \"questionTypeId\": 1,\r\n            \"options\": [\r\n                {\r\n                    \"id\": 1055,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"HttpContext\",\r\n                    \"isAnswer\": true\r\n                },\r\n                {\r\n                    \"id\": 1056,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Session\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1057,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"Cookies\",\r\n                    \"isAnswer\": false\r\n                },\r\n                {\r\n                    \"id\": 1058,\r\n                    \"questionId\": 1010,\r\n                    \"name\": \"SqlServer\",\r\n                    \"isAnswer\": false\r\n                }\r\n            ],\r\n            \"questionType\": {\r\n                \"id\": 1,\r\n                \"name\": \"Multiple Choice\",\r\n                \"isActive\": true\r\n            }\r\n        }\r\n    ],\r\n  \"config\":{\r\n    allowBack: true,\r\n    allowReview: true,\r\n    autoMove: false,    \r\n    duration: 10,  // \r\n    pageSize: 1,\r\n    requiredAll: false,\r\n    richText: false,\r\n    shuffleQuestions: false,\r\n    shuffleOptions: false,\r\n    showClock: true,\r\n    showPager: true\r\n    \r\n    }\r\n}"
                }
            ],
            "src/app/core/state/config.selecteur.ts": [
                {
                    "name": "selectallowbackValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.selecteur.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectConfigState, // SÃ©lectionne la slice de l'Ã©tat 'config'\r\n  (state: ConfigState) => state.config.allowBack // Retourne la valeur de 'allowback' dans cette slice\r\n)"
                },
                {
                    "name": "selectAllowReview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.selecteur.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: ConfigState) => state.config.allowReview"
                },
                {
                    "name": "selectback",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.selecteur.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "selectallowbackValue"
                },
                {
                    "name": "selectConfigState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/config.selecteur.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<ConfigState>('config')"
                }
            ],
            "src/app/core/state/counter.selectors.ts": [
                {
                    "name": "selectCounter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "selectCounterValue"
                },
                {
                    "name": "selectCounterState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<CounterState>('counter')"
                },
                {
                    "name": "selectCounterValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/state/counter.selectors.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\r\n  selectCounterState, // Prend la slice counter comme input\r\n  (state: CounterState) => state.counter // Retourne la valeur de 'counter' dans cette slice\r\n)"
                }
            ],
            "src/app/share/themes.ts": [
                {
                    "name": "themes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/share/themes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[{\r\n\t\t\"slug\": \"aspnet\",\r\n\t\t\"title\": \"AspNet\",\r\n\t\t\"logo\": \"assets/images/aspnet.png\",\r\n\t\t\"description\": \"description\"\r\n\t},\r\n    {\r\n\t\t\"slug\": \"typescript\",\r\n\t\t\"title\": \"TypeScript\",\r\n\t\t\"logo\": \"assets/images/typescript.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"ecma\",\r\n\t\t\"title\": \"ECMAScript 6\",\r\n\t\t\"logo\": \"assets/images/js.jpg\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t},{\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t},{\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t},{\r\n\t\t\"slug\": \"ng2\",\r\n\t\t\"title\": \"Angular 2\",\r\n\t\t\"logo\": \"assets/images/angular.png\",\r\n\t\t\"description\": \"description\"\r\n\t}, {\r\n\t\t\"slug\": \"react\",\r\n\t\t\"title\": \"React\",\r\n\t\t\"logo\": \"assets/images/react.png\",\r\n\t\t\"description\": \"description\"\r\n\t}]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/counter/counter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CounterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/quiz1/quiz1.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "Quiz1Component",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/teststate/msg/msg.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MsgComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/authguard.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/option.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Option",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/question.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Question",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/quiz-config.ts",
                "type": "class",
                "linktype": "classe",
                "name": "QuizConfig",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/core/quiz.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Quiz",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/myservice.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MyserviceService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/share.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ShareService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/services/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "allowback",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "allowreview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "duration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "configreducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.selecteur.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectallowbackValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.selecteur.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectAllowReview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.selecteur.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectback",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/config.selecteur.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectConfigState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/configstate.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ConfigState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/configstate.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialConfigState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "decrement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "increment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "counterReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCounter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCounterState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.selectors.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "selectCounterValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CounterState",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/state/counter.state.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialCounterState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/user.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/cores/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/companyform/companyform.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyformComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/features/config/config.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/configstore/configstore.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfigstoreComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/option/option.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/features/question/question.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuestionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/questionform/questionform.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuestionformComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/quiz-form/quiz-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuizFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/features/quiz/quiz.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuizComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/features/theme-list/theme-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/theme/theme.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/features/user-detail/user-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/features/user/user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/features/userform/userform.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserformComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/features/userformreactive/userformreactive.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserformreactiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/share/backcolor.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BackcolorDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/share/csharp.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "csharp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/share/dataquiz.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "q",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/share/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/share/popup/popup.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/share/quiz.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "QuizPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/share/score.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ScorePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/share/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/share/table.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TableDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/share/themes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "themes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/share/top-menu/top-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}